#!/usr/bin/env ruby 

# theres needs to be a dragon in the game
#                                                  /===-_---~~~~~~~~~------____
#                                                 |===-~___                _,-'
#                  -==\\                         `//~\\   ~~~~`---.___.-~~
#              ______-==|                         | |  \\           _-~`
#        __--~~~  ,-/-==\\                        | |   `\        ,'
#     _-~       /'    |  \\                      / /      \      /
#   .'        /       |   \\                   /' /        \   /'
#  /  ____  /         |    \`\.__/-~~ ~ \ _ _/'  /          \/'
# /-'~    ~~~~~---__  |     ~-/~         ( )   /'        _--~`
#                   \_|      /        _)   ;  ),   __--~~
#                     '~~--_/      _-~/-  / \   '-~ \
#                    {\__--_/}    / \\_>- )<__\      \
#                    /'   (_/  _-~  | |__>--<__|      | 
#                   |0  0 _/) )-~     | |__>--<__|      |
#                   / /~ ,_/       / /__>---<__/      |
#                  o o _//        /-~_>---<__-~      /
#                  (^(~          /~_>---<__-      _-~
#                 ,/|           /__>--<__/     _-~
#              ,//('(          |__>--<__|     /                  .----_ 
#             ( ( '))          |__>--<__|    |                 /' _---_~\
#          `-)) )) (           |__>--<__|    |               /'  /     ~\`\
#         ,/,'//( (             \__>--<__\    \            /'  //        ||
#       ,( ( ((, ))              ~-__>--<_~-_  ~--____---~' _/'/        /'
#     `~/  )` ) ,/|                 ~-_~>--<_/-__       __-~ _/ 
#   ._-~//( )/ )) `                    ~~-'_/_/ /~~~~~~~__--~ 
#    ;'( ')/ ,)(                              ~~~~~~~~~~ 
#   ' ') '( (/
#     '   '  `


# fun game: find all the ðŸ‘»'s in the source code
# There are currently: 5 ðŸ‘»'s (other than these 2)
# If you add a ghost please hide it well
# And don't use cmd+f/ctrl+f to find them, thats lame ðŸ‘Ž

# When contributing, please create a new branch for your commits

# And if you are even thinking about using spaces in here,
# then please read this article below. It's for your own good.
# http://lea.verou.me/2012/01/why-tabs-are-clearly-superior/

require "time"
require "readline"
require "stringio"

def prompt(_prompt = "> ")
	Readline.readline(_prompt, true).squeeze(" ").strip.downcase
end

def convert_input(input)
	# it's assumed the input is already all lowercase
	case input
	when "banyan tree", "banyan"
		"tree"
	when "tall mountain"
		"mountain"
	when "axe"
		"pickaxe"
	else
		input
	end
end

$options = {:save_file => File.expand_path("~/.conquest_save")}

def add_command_to_history(input)
	open($options[:save_file], "a") { |file| file.puts input } unless $options[:no_save] || $options[:loading]
end

require_relative 'lib/colors'
require_relative 'lib/quest'
require_relative 'lib/achievement'
require_relative 'lib/person'
require_relative 'lib/item'
require_relative 'lib/room'
require_relative 'lib/room_list'
require_relative 'lib/player'
require_relative 'lib/delegate'

if __FILE__ == $0
	
	until ARGV.empty?
		case o = ARGV.shift
		when "--reset", "-r"
			$options[:reset] = true
		when "--no-save", "-n"
			$options[:no_save] = true
		when "--save-file", "-f"
			$options[:save_file] = File.expand_path(ARGV.shift)
		else
			puts "unrecognized option: #{o}"
			exit
		end
	end

	delegate = Delegate.new

	$player.current_room.enter
	
	chance = 1000 # increase this number if more people start using this
	if rand(1..chance) == 1
		puts "Theres a 1 in #{chance} that this will be printed."
		$player.achievements[:lucky].unlock
	end

	loop do
		ðŸ’¬ = prompt
		delegate.parse(ðŸ’¬)
	end
end
